var data = {
    "opinion": {"voto": 42000, "pri": 8700, "nulo": 8400, "prd": 3200, "prep": 1300, "morena": 1900, "#elecciones2015": 922, "pan": 822, "candidato": 717, "resultados": 615, "gana": 515, "evaluación": 414,"triunfo": 314, "electoral": 114},
    "diputados":{"ley": 1348,"#delamanoconlagente": 1244,"@epn": 1130,"apoyo": 1028,"@presidenciamx:": 923,"atención": 820,"#vamosaganar": 720,"autismo": 620,"#atizapán": 518,"amigos": 417,"gente": 316,"propuestas": 215,"#votapri": 115,"gobierno": 95,"trabajo": 2114,"protección": 114,"mujeres": 313,"@canalcongreso:": 913},
    "ejecutivo":{"@segob_mx:": 2189, "#blanca": 1988, "@presidenciamx:": 1756, "#huracán": 1546, "#díamundialsintabaco": 1341, "#infografía": 1127, "#tabaquismo": 922, "riesgo": 722, "denuncia": 521, "@epn": 319, "mundial": 119, "#tormentatropical": 318, "#alertaamarilla": 517, "#bcs": 216,"circulación": 416, "marina": 616, "seguridad": 316},
    "gobernadores":{"#morelos": 119, "nacional": 6528, "familia": 4527, "desarrollo": 3527, "@gobiernohidalgo": 325, "paz": 2622, "educación": 2222, "felicidades": 1820, "estado": 1420, "reconocimiento": 1019, "@epn:": 619, "mundial": 619, "salud": 1019, "@presidenciamx:": 918, "compromiso": 3217, "#mástuzoquenunca": 517, "protección": 517, "jornada": 314, "inversión": 214, "empresas": 114},
    "senadores":{"@panchdominguez": 1040,"pan": 927, "#votapan": 826, "querétaro": 725, "triunfo": 623, "@letyherrerasen": 522, "voto": 421, "campaña": 321, "gracias": 221, "felicidades": 121, "#elecciones2015": 99, "#yaganamos": 89, "gobernador": 78, "@miguelherreradt": 56, "elección": 46, "#panchogobernador": 16}
    };

var diameter = 600;
var newcat = "ejecutivo";

// create chart svg space
var svg = d3.select('#chart').append('svg')
	.attr('width', diameter)
	.attr('height', diameter);

// define the omnitooltip
var tooltip = d3.select("body")
    .append("div")
    .attr('id', 'tooltip')
    .style("position", "absolute")
    .style("z-index", "10")
    .style("visibility", "hidden")
    .style("color", "white")
    .style("padding", "8px")
    .style("background-color", "rgba(0, 0, 0, 0.75)")
    .style("border-radius", "6px")
    .style("font", "12px sans-serif")
    .text(":)");



// invoke pack layout and misterious filtering
var bubble = d3.layout.pack()
    .sort(null)
	.size([diameter, diameter])
	.padding(-4) // padding between adjacent circles
	.value(function(d) {return d.size;}); // new data will be loaded to bubble layout


function drawBubbles(newcat){
    var nodes = bubble.nodes(processData(data[newcat]))
	    .filter(function(d) { return !d.children; }); // filter out the outer bubble 
    console.log(data[newcat]);

    //new vars
    var duration = 200;
    var delay = 0;

    //create groups for each, append circle and text
    var vis = svg.selectAll('g')
	    .data(nodes, function(d) {return d.name;});
    var vis_c = svg.selectAll('circle');
    var vis_t = svg.selectAll('text');

    // update
    vis.transition()
        .duration(duration)
        .delay(function(d, i) {delay = i*7; return delay;})
        .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; });
 

    //enter
    vis.enter().append('g')
        .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })
        .append('circle')
	        .attr('r', function(d) { return d.r; })
	        .attr('class', function(d) { return sizeToClass(d.value); })
            .style('opacity', 0)
            .transition().duration(duration*1.2)
                .style('opacity', 1)
        .append("text")
            .attr("dy", ".3em")
            .style("text-anchor", "middle")
            .style("stroke", "#FFFFFF")
            .style("fill", "#F0F0F0")
            .style("pointer-events", "none")
            .text(function(d) { return d.name; })
        //.on('click', function(d){
        //put onclick-function here
        //console.log(d.name + ' dude!')
        .on("mouseover", function(d) {
            tooltip.text(d.name + ": " + d.value);
            tooltip.style("visibility", "visible");
        })
        .on("mousemove", function() {
            return tooltip.style("top", (d3.event.pageY-10)+"px").style("left",(d3.event.pageX+10)+"px");
        })
        .on("mouseout", function(){return tooltip.style("visibility", "hidden");
        });

    //exit
    vis.exit()
        .transition()
        .duration(duration+delay)
        .style('opacity', '0')
        .remove();
    };

drawBubbles('senadores');


// complementary functions
function processData(pata) {
	var obj = pata;
	var newDataSet = []; 
	for(var prop in obj) {
		newDataSet.push({name: prop, className: prop.toLowerCase(), size: obj[prop]['count']});
	}
	console.log(":P Nom nom, data");
    console.log(newDataSet);
	return {children: newDataSet};
}


function changeCategory() {
    newcat = document.getElementById("categoria").value;
    console.log('[Updating to]: ' + newcat);
    drawBubbles(newcat);
    
    /*/ update nodes
    nodes = bubble.nodes(processData(data[newcat]))
        .filter(function(d) { return !d.children; });
    
    // create new groups, bubbles and labels
    vis = svg.selectAll('g')
        .data(nodes, function(d) {return d.name;})
        .enter().append('g')
        .transition()
        .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; });

    vis.append('circle') 
        .transition()
        .attr('r', function(d) { return d.r; })
        .attr('class', function(d) { return sizeToClass(d.value); })
        .on("mouseover", function(d) {
            tooltip.text(d.name + ": " + d.value);
            tooltip.style("visibility", "visible");
            })
        .on("mousemove", function() {
            return tooltip.style("top", (d3.event.pageY-10)+"px").style("left",(d3.event.pageX+10)+"px");
            })
        .on("mouseout", function(){return tooltip.style("visibility", "hidden");
            });

    vis.append("text")
        .transition()
        .attr("dy", ".3em")
        .style("text-anchor", "middle")
        .style("stroke", "#FFFFFF")
        .style("fill", "#F0F0F0")
        .style("pointer-events", "none")
        .text(function(d) { return d.name; });
    */
    }

function sizeToClass(siz){
    if (siz < 50) return "menc10";
    if (siz>50 && siz < 100) return "menc50";
    if (siz>100 && siz < 500) return "menc1c";
    if (siz>500 && siz < 1000) return "menc5c";
    if (siz>1000 && siz < 5000) return "menc1k";
    if (siz>5000 && siz < 10000) return "menc5k";
    if (siz>10000 && siz < 50000) return "menc1h";
    else return "otros";
}